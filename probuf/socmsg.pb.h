// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: socmsg.proto

#ifndef PROTOBUF_socmsg_2eproto__INCLUDED
#define PROTOBUF_socmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace bd_soc_protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_socmsg_2eproto();
void protobuf_AssignDesc_socmsg_2eproto();
void protobuf_ShutdownFile_socmsg_2eproto();

class Message;

enum Message_Mode {
  Message_Mode_REQUEST = 0,
  Message_Mode_RESPONSE = 1,
  Message_Mode_REQUESTS = 2,
  Message_Mode_RESPONSES = 3
};
bool Message_Mode_IsValid(int value);
const Message_Mode Message_Mode_Mode_MIN = Message_Mode_REQUEST;
const Message_Mode Message_Mode_Mode_MAX = Message_Mode_RESPONSES;
const int Message_Mode_Mode_ARRAYSIZE = Message_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_Mode_descriptor();
inline const ::std::string& Message_Mode_Name(Message_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_Mode_descriptor(), value);
}
inline bool Message_Mode_Parse(
    const ::std::string& name, Message_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_Mode>(
    Message_Mode_descriptor(), name, value);
}
enum Message_ServiceNo {
  Message_ServiceNo_REGISTER = 100000,
  Message_ServiceNo_SESSION = 100001,
  Message_ServiceNo_START_PLUGIN = 100002,
  Message_ServiceNo_STOP_PLUGIN = 100003,
  Message_ServiceNo_START_AGENT = 100004,
  Message_ServiceNo_STOP_AGENT = 100005,
  Message_ServiceNo_MONITOR_HOST = 100006,
  Message_ServiceNo_MANAGE_AGENT = 100007,
  Message_ServiceNo_START_TASK = 100008,
  Message_ServiceNo_LOG = 200000,
  Message_ServiceNo_PERFORMANCE = 200001,
  Message_ServiceNo_SERVICE = 200002,
  Message_ServiceNo_FLOW = 200003,
  Message_ServiceNo_NETFLOW = 200004,
  Message_ServiceNo_SYSTEM = 999999
};
bool Message_ServiceNo_IsValid(int value);
const Message_ServiceNo Message_ServiceNo_ServiceNo_MIN = Message_ServiceNo_REGISTER;
const Message_ServiceNo Message_ServiceNo_ServiceNo_MAX = Message_ServiceNo_SYSTEM;
const int Message_ServiceNo_ServiceNo_ARRAYSIZE = Message_ServiceNo_ServiceNo_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_ServiceNo_descriptor();
inline const ::std::string& Message_ServiceNo_Name(Message_ServiceNo value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_ServiceNo_descriptor(), value);
}
inline bool Message_ServiceNo_Parse(
    const ::std::string& name, Message_ServiceNo* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_ServiceNo>(
    Message_ServiceNo_descriptor(), name, value);
}
enum Message_enptypeNo {
  Message_enptypeNo_NO_ENPTYPE = 4000,
  Message_enptypeNo_AES256ECB = 4001,
  Message_enptypeNo_AES256CBC = 4002,
  Message_enptypeNo_AES256CFB = 4003,
  Message_enptypeNo_AES256CTR = 4004,
  Message_enptypeNo_AES256OFB = 4005
};
bool Message_enptypeNo_IsValid(int value);
const Message_enptypeNo Message_enptypeNo_enptypeNo_MIN = Message_enptypeNo_NO_ENPTYPE;
const Message_enptypeNo Message_enptypeNo_enptypeNo_MAX = Message_enptypeNo_AES256OFB;
const int Message_enptypeNo_enptypeNo_ARRAYSIZE = Message_enptypeNo_enptypeNo_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_enptypeNo_descriptor();
inline const ::std::string& Message_enptypeNo_Name(Message_enptypeNo value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_enptypeNo_descriptor(), value);
}
inline bool Message_enptypeNo_Parse(
    const ::std::string& name, Message_enptypeNo* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_enptypeNo>(
    Message_enptypeNo_descriptor(), name, value);
}
enum Message_comtypeNo {
  Message_comtypeNo_NO_COMPRESS = 5000,
  Message_comtypeNo_COMPRESS_ZLIB = 5001,
  Message_comtypeNo_COMPRESS_GZIP = 5002
};
bool Message_comtypeNo_IsValid(int value);
const Message_comtypeNo Message_comtypeNo_comtypeNo_MIN = Message_comtypeNo_NO_COMPRESS;
const Message_comtypeNo Message_comtypeNo_comtypeNo_MAX = Message_comtypeNo_COMPRESS_GZIP;
const int Message_comtypeNo_comtypeNo_ARRAYSIZE = Message_comtypeNo_comtypeNo_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_comtypeNo_descriptor();
inline const ::std::string& Message_comtypeNo_Name(Message_comtypeNo value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_comtypeNo_descriptor(), value);
}
inline bool Message_comtypeNo_Parse(
    const ::std::string& name, Message_comtypeNo* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_comtypeNo>(
    Message_comtypeNo_descriptor(), name, value);
}
// ===================================================================

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Message_Mode Mode;
  static const Mode REQUEST = Message_Mode_REQUEST;
  static const Mode RESPONSE = Message_Mode_RESPONSE;
  static const Mode REQUESTS = Message_Mode_REQUESTS;
  static const Mode RESPONSES = Message_Mode_RESPONSES;
  static inline bool Mode_IsValid(int value) {
    return Message_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    Message_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    Message_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    Message_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return Message_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return Message_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return Message_Mode_Parse(name, value);
  }

  typedef Message_ServiceNo ServiceNo;
  static const ServiceNo REGISTER = Message_ServiceNo_REGISTER;
  static const ServiceNo SESSION = Message_ServiceNo_SESSION;
  static const ServiceNo START_PLUGIN = Message_ServiceNo_START_PLUGIN;
  static const ServiceNo STOP_PLUGIN = Message_ServiceNo_STOP_PLUGIN;
  static const ServiceNo START_AGENT = Message_ServiceNo_START_AGENT;
  static const ServiceNo STOP_AGENT = Message_ServiceNo_STOP_AGENT;
  static const ServiceNo MONITOR_HOST = Message_ServiceNo_MONITOR_HOST;
  static const ServiceNo MANAGE_AGENT = Message_ServiceNo_MANAGE_AGENT;
  static const ServiceNo START_TASK = Message_ServiceNo_START_TASK;
  static const ServiceNo LOG = Message_ServiceNo_LOG;
  static const ServiceNo PERFORMANCE = Message_ServiceNo_PERFORMANCE;
  static const ServiceNo SERVICE = Message_ServiceNo_SERVICE;
  static const ServiceNo FLOW = Message_ServiceNo_FLOW;
  static const ServiceNo NETFLOW = Message_ServiceNo_NETFLOW;
  static const ServiceNo SYSTEM = Message_ServiceNo_SYSTEM;
  static inline bool ServiceNo_IsValid(int value) {
    return Message_ServiceNo_IsValid(value);
  }
  static const ServiceNo ServiceNo_MIN =
    Message_ServiceNo_ServiceNo_MIN;
  static const ServiceNo ServiceNo_MAX =
    Message_ServiceNo_ServiceNo_MAX;
  static const int ServiceNo_ARRAYSIZE =
    Message_ServiceNo_ServiceNo_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServiceNo_descriptor() {
    return Message_ServiceNo_descriptor();
  }
  static inline const ::std::string& ServiceNo_Name(ServiceNo value) {
    return Message_ServiceNo_Name(value);
  }
  static inline bool ServiceNo_Parse(const ::std::string& name,
      ServiceNo* value) {
    return Message_ServiceNo_Parse(name, value);
  }

  typedef Message_enptypeNo enptypeNo;
  static const enptypeNo NO_ENPTYPE = Message_enptypeNo_NO_ENPTYPE;
  static const enptypeNo AES256ECB = Message_enptypeNo_AES256ECB;
  static const enptypeNo AES256CBC = Message_enptypeNo_AES256CBC;
  static const enptypeNo AES256CFB = Message_enptypeNo_AES256CFB;
  static const enptypeNo AES256CTR = Message_enptypeNo_AES256CTR;
  static const enptypeNo AES256OFB = Message_enptypeNo_AES256OFB;
  static inline bool enptypeNo_IsValid(int value) {
    return Message_enptypeNo_IsValid(value);
  }
  static const enptypeNo enptypeNo_MIN =
    Message_enptypeNo_enptypeNo_MIN;
  static const enptypeNo enptypeNo_MAX =
    Message_enptypeNo_enptypeNo_MAX;
  static const int enptypeNo_ARRAYSIZE =
    Message_enptypeNo_enptypeNo_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  enptypeNo_descriptor() {
    return Message_enptypeNo_descriptor();
  }
  static inline const ::std::string& enptypeNo_Name(enptypeNo value) {
    return Message_enptypeNo_Name(value);
  }
  static inline bool enptypeNo_Parse(const ::std::string& name,
      enptypeNo* value) {
    return Message_enptypeNo_Parse(name, value);
  }

  typedef Message_comtypeNo comtypeNo;
  static const comtypeNo NO_COMPRESS = Message_comtypeNo_NO_COMPRESS;
  static const comtypeNo COMPRESS_ZLIB = Message_comtypeNo_COMPRESS_ZLIB;
  static const comtypeNo COMPRESS_GZIP = Message_comtypeNo_COMPRESS_GZIP;
  static inline bool comtypeNo_IsValid(int value) {
    return Message_comtypeNo_IsValid(value);
  }
  static const comtypeNo comtypeNo_MIN =
    Message_comtypeNo_comtypeNo_MIN;
  static const comtypeNo comtypeNo_MAX =
    Message_comtypeNo_comtypeNo_MAX;
  static const int comtypeNo_ARRAYSIZE =
    Message_comtypeNo_comtypeNo_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  comtypeNo_descriptor() {
    return Message_comtypeNo_descriptor();
  }
  static inline const ::std::string& comtypeNo_Name(comtypeNo value) {
    return Message_comtypeNo_Name(value);
  }
  static inline bool comtypeNo_Parse(const ::std::string& name,
      comtypeNo* value) {
    return Message_comtypeNo_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 serial_no = 1;
  inline bool has_serial_no() const;
  inline void clear_serial_no();
  static const int kSerialNoFieldNumber = 1;
  inline ::google::protobuf::uint64 serial_no() const;
  inline void set_serial_no(::google::protobuf::uint64 value);

  // optional uint32 version = 2 [default = 16777216];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional .bd_soc_protobuf.Message.ServiceNo service_no = 3 [default = SESSION];
  inline bool has_service_no() const;
  inline void clear_service_no();
  static const int kServiceNoFieldNumber = 3;
  inline ::bd_soc_protobuf::Message_ServiceNo service_no() const;
  inline void set_service_no(::bd_soc_protobuf::Message_ServiceNo value);

  // required uint64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional .bd_soc_protobuf.Message.Mode mode = 5 [default = REQUEST];
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 5;
  inline ::bd_soc_protobuf::Message_Mode mode() const;
  inline void set_mode(::bd_soc_protobuf::Message_Mode value);

  // optional uint32 code = 6 [default = 0];
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 6;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);

  // optional .bd_soc_protobuf.Message.enptypeNo enptype = 7 [default = NO_ENPTYPE];
  inline bool has_enptype() const;
  inline void clear_enptype();
  static const int kEnptypeFieldNumber = 7;
  inline ::bd_soc_protobuf::Message_enptypeNo enptype() const;
  inline void set_enptype(::bd_soc_protobuf::Message_enptypeNo value);

  // optional .bd_soc_protobuf.Message.comtypeNo comtype = 8 [default = NO_COMPRESS];
  inline bool has_comtype() const;
  inline void clear_comtype();
  static const int kComtypeFieldNumber = 8;
  inline ::bd_soc_protobuf::Message_comtypeNo comtype() const;
  inline void set_comtype(::bd_soc_protobuf::Message_comtypeNo value);

  // optional string desc = 9;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 9;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional bytes content = 10;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 10;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Message)
  // @@protoc_insertion_point(class_scope:bd_soc_protobuf.Message)
 private:
  inline void set_has_serial_no();
  inline void clear_has_serial_no();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_service_no();
  inline void clear_has_service_no();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_enptype();
  inline void clear_has_enptype();
  inline void set_has_comtype();
  inline void clear_has_comtype();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 serial_no_;
  ::google::protobuf::uint32 version_;
  int service_no_;
  ::google::protobuf::uint64 time_;
  int mode_;
  ::google::protobuf::uint32 code_;
  int enptype_;
  int comtype_;
  ::std::string* desc_;
  ::std::string* content_;
  friend void  protobuf_AddDesc_socmsg_2eproto();
  friend void protobuf_AssignDesc_socmsg_2eproto();
  friend void protobuf_ShutdownFile_socmsg_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================

static const int kRegisterSnFieldNumber = 11;
extern ::google::protobuf::internal::ExtensionIdentifier< ::bd_soc_protobuf::Message,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint64 >, 4, false >
  register_sn;

// ===================================================================

// Message

// required uint64 serial_no = 1;
inline bool Message::has_serial_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_serial_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_serial_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_serial_no() {
  serial_no_ = GOOGLE_ULONGLONG(0);
  clear_has_serial_no();
}
inline ::google::protobuf::uint64 Message::serial_no() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.serial_no)
  return serial_no_;
}
inline void Message::set_serial_no(::google::protobuf::uint64 value) {
  set_has_serial_no();
  serial_no_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.serial_no)
}

// optional uint32 version = 2 [default = 16777216];
inline bool Message::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_version() {
  version_ = 16777216u;
  clear_has_version();
}
inline ::google::protobuf::uint32 Message::version() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.version)
  return version_;
}
inline void Message::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.version)
}

// optional .bd_soc_protobuf.Message.ServiceNo service_no = 3 [default = SESSION];
inline bool Message::has_service_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_service_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_service_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_service_no() {
  service_no_ = 100001;
  clear_has_service_no();
}
inline ::bd_soc_protobuf::Message_ServiceNo Message::service_no() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.service_no)
  return static_cast< ::bd_soc_protobuf::Message_ServiceNo >(service_no_);
}
inline void Message::set_service_no(::bd_soc_protobuf::Message_ServiceNo value) {
  assert(::bd_soc_protobuf::Message_ServiceNo_IsValid(value));
  set_has_service_no();
  service_no_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.service_no)
}

// required uint64 time = 4;
inline bool Message::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 Message::time() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.time)
  return time_;
}
inline void Message::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.time)
}

// optional .bd_soc_protobuf.Message.Mode mode = 5 [default = REQUEST];
inline bool Message::has_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::bd_soc_protobuf::Message_Mode Message::mode() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.mode)
  return static_cast< ::bd_soc_protobuf::Message_Mode >(mode_);
}
inline void Message::set_mode(::bd_soc_protobuf::Message_Mode value) {
  assert(::bd_soc_protobuf::Message_Mode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.mode)
}

// optional uint32 code = 6 [default = 0];
inline bool Message::has_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 Message::code() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.code)
  return code_;
}
inline void Message::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.code)
}

// optional .bd_soc_protobuf.Message.enptypeNo enptype = 7 [default = NO_ENPTYPE];
inline bool Message::has_enptype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Message::set_has_enptype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Message::clear_has_enptype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Message::clear_enptype() {
  enptype_ = 4000;
  clear_has_enptype();
}
inline ::bd_soc_protobuf::Message_enptypeNo Message::enptype() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.enptype)
  return static_cast< ::bd_soc_protobuf::Message_enptypeNo >(enptype_);
}
inline void Message::set_enptype(::bd_soc_protobuf::Message_enptypeNo value) {
  assert(::bd_soc_protobuf::Message_enptypeNo_IsValid(value));
  set_has_enptype();
  enptype_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.enptype)
}

// optional .bd_soc_protobuf.Message.comtypeNo comtype = 8 [default = NO_COMPRESS];
inline bool Message::has_comtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Message::set_has_comtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Message::clear_has_comtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Message::clear_comtype() {
  comtype_ = 5000;
  clear_has_comtype();
}
inline ::bd_soc_protobuf::Message_comtypeNo Message::comtype() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.comtype)
  return static_cast< ::bd_soc_protobuf::Message_comtypeNo >(comtype_);
}
inline void Message::set_comtype(::bd_soc_protobuf::Message_comtypeNo value) {
  assert(::bd_soc_protobuf::Message_comtypeNo_IsValid(value));
  set_has_comtype();
  comtype_ = value;
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.comtype)
}

// optional string desc = 9;
inline bool Message::has_desc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Message::set_has_desc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Message::clear_has_desc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Message::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& Message::desc() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.desc)
  return *desc_;
}
inline void Message::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.desc)
}
inline void Message::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:bd_soc_protobuf.Message.desc)
}
inline void Message::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bd_soc_protobuf.Message.desc)
}
inline ::std::string* Message::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bd_soc_protobuf.Message.desc)
  return desc_;
}
inline ::std::string* Message::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Message::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bd_soc_protobuf.Message.desc)
}

// optional bytes content = 10;
inline bool Message::has_content() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Message::set_has_content() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Message::clear_has_content() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Message::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Message::content() const {
  // @@protoc_insertion_point(field_get:bd_soc_protobuf.Message.content)
  return *content_;
}
inline void Message::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:bd_soc_protobuf.Message.content)
}
inline void Message::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:bd_soc_protobuf.Message.content)
}
inline void Message::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bd_soc_protobuf.Message.content)
}
inline ::std::string* Message::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:bd_soc_protobuf.Message.content)
  return content_;
}
inline ::std::string* Message::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Message::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:bd_soc_protobuf.Message.content)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bd_soc_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bd_soc_protobuf::Message_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bd_soc_protobuf::Message_Mode>() {
  return ::bd_soc_protobuf::Message_Mode_descriptor();
}
template <> struct is_proto_enum< ::bd_soc_protobuf::Message_ServiceNo> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bd_soc_protobuf::Message_ServiceNo>() {
  return ::bd_soc_protobuf::Message_ServiceNo_descriptor();
}
template <> struct is_proto_enum< ::bd_soc_protobuf::Message_enptypeNo> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bd_soc_protobuf::Message_enptypeNo>() {
  return ::bd_soc_protobuf::Message_enptypeNo_descriptor();
}
template <> struct is_proto_enum< ::bd_soc_protobuf::Message_comtypeNo> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bd_soc_protobuf::Message_comtypeNo>() {
  return ::bd_soc_protobuf::Message_comtypeNo_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_socmsg_2eproto__INCLUDED
